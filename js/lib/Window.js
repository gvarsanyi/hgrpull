// Generated by CoffeeScript 1.6.3
(function() {
  var Window;

  Window = (function() {
    function Window() {}

    Window.prototype.init = function(rows) {
      var i, _i, _ref;
      this.rows = rows;
      if (this.rows == null) {
        this.rows = process.stdout.rows;
      }
      for (i = _i = 0, _ref = this.rows; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        process.stdout.write('\n');
      }
      this.last_x = 0;
      return this;
    };

    Window.prototype.out = function(msg, x, y, maxlength) {
      var w;
      msg = String(msg);
      maxlength = maxlength || msg.length;
      while (msg.length < maxlength) {
        msg += ' ';
      }
      y += process.stdout.rows - this.rows;
      w = '\u001B[' + (y + 1) + ';' + (x + 1) + 'H';
      w += msg.substr(0, maxlength);
      w += '\u001B[' + (process.stdout.rows - 1) + ';' + (this.last_x + 1) + 'H';
      process.stdout.write(w);
      return this;
    };

    Window.prototype.clear_last_row = function() {
      var i, w, _i, _ref;
      this.last_x = 0;
      w = '\u001B[' + (process.stdout.rows - 1) + ';1H';
      for (i = _i = 0, _ref = process.stdout.columns; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        w += ' ';
      }
      w += '\u001B[' + (process.stdout.rows - 1) + ';1H';
      process.stdout.write(w);
      return this;
    };

    Window.prototype.get_password = function(prompt, callback) {
      var password, _ref;
      if (callback === void 0) {
        _ref = [prompt, callback], callback = _ref[0], prompt = _ref[1];
      }
      process.stdout.write(prompt || 'Password: ');
      process.stdin.setRawMode(true);
      process.stdin.resume();
      process.stdin.setEncoding('utf8');
      this.last_x = String(prompt || 'Password: ').length;
      password = '';
      process.stdin.on('data', function(character) {
        switch (character) {
          case '\r':
          case '\n':
          case '\u0004':
            process.stdout.write('\n');
            process.stdin.setRawMode(false);
            process.stdin.pause();
            return callback(null, password);
          case '\u0003':
            return callback(new Error('Ctrl-C was hit'));
          default:
            process.stdout.write('*');
            this.last_x += 1;
            return password += character;
        }
      });
      return this;
    };

    return Window;

  })();

  module.exports = Window;

}).call(this);
